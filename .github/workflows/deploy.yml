name: Deploy Docker App to AWS EC2

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rust-api:latest

      - name: Configure AWS credentials
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          ls -la ~/.ssh/private_key
          ssh-keygen -l -f ~/.ssh/private_key || echo "Invalid key format"
          cat >> ~/.ssh/config << EOF
          Host *
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
          EOF
          chmod 600 ~/.ssh/config

      - name: Test SSH Connection
        run: ssh -v ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'

      - name: Prepare Server Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            sudo mkdir -p /srv/rust-api
            sudo chown -R $USER:$USER /srv/rust-api
            echo "Directory prepared"

      - name: Copy docker-compose.yml to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "docker-compose.yml"
          target: "/srv/rust-api/"
          overwrite: true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd /srv/rust-api

            # Debug: Check directory contents
            echo "Current directory contents:"
            ls -la

            # Create or update .env file with explicit port value
            cat > .env << EOL
            PORT=${{ secrets.PORT }}
            RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}
            RABBITMQ_PASS=${{ secrets.RABBITMQ_PASS }}
            RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}
            RABBITMQ_MANAGEMENT_PORT=${{ secrets.RABBITMQ_MANAGEMENT_PORT }}
            EOL

            # Debug: Verify files
            echo "Verifying docker-compose.yml:"
            cat docker-compose.yml

            echo "Verifying .env file:"
            cat .env

            # Stop any existing containers
            echo "Stopping existing containers..."
            docker compose down

            # Pull and start the services
            echo "Pulling latest images..."
            docker compose pull

            echo "Starting containers..."
            docker compose up -d

            # Check container status
            echo "Container status:"
            docker compose ps
            docker compose logs

            # Clean up old images
            docker image prune -af --force
